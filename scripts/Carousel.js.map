{"version":3,"sources":["Carousel.babel.js"],"names":["Carousel","config","arguments","length","undefined","_classCallCheck","this","effect","width","height","selector","nav","time","slides","init","classe","className","forEach","item","replace","style","selectorSlides","_this","count","interval","container","document","querySelector","circleItems","querySelectorAll","setSlide","loopCount","remove","RegExp","removeClass","addClass","loop","setInterval","loopStop","clearInterval","addEventListener","idx","arrSlides","txtHTML","navCircles","first","i","len","desc","title","containerHTML","containerCircles","navHTML","innerHTML","execEffect","_this2","classList","add","callFunctions","drawSlide","setDimensions","window","onresize"],"mappings":"6XAKMA,oBACF,QAAAA,KAAyB,GAAbC,GAAaC,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,KAAAG,iBAAAC,KAAAN,GACrBM,KAAKC,OAASN,EAAOM,QAAU,YAC/BD,KAAKE,MAAQP,EAAOO,OAAS,OAC7BF,KAAKG,OAASR,EAAOQ,QAAU,QAC/BH,KAAKI,SAAWT,EAAOS,SACvBJ,KAAKK,IAAMV,EAAOU,MAAO,EACzBL,KAAKM,KAAOX,EAAOW,MAAQ,EAC3BN,KAAKO,OAASZ,EAAOY,WACrBP,KAAKQ,6DAEAJ,EAAUK,GACfL,EAASM,WAAa,IAAID,sCAElBL,EAAUK,GAClBL,EAASO,QAAQ,SAAAC,GACbA,EAAKF,UAAYE,EAAKF,UAAUG,QAAQJ,EAAQ,4CAG1CL,GACVA,EAASU,MAAMZ,MAAQF,KAAKE,MAC5BE,EAASU,MAAMX,OAASH,KAAKG,0CAEtBY,GAAgB,GAAAC,GAAAhB,KACnBiB,EAAQ,EACRC,EAAW,KACTC,EAAYC,SAASC,cAAcrB,KAAKI,UACxCkB,EAAcF,SAASG,iBAAiB,gCAExCC,EAAW,SAACC,OACI3B,KAAd2B,IACAR,EAAQQ,EAEZ,IAAMC,GAAS,GAAIC,QAAJ,YAAuBX,EAAKf,OAA5B,kBAAqD,IACpEe,GAAKY,YAAYb,EAAgBW,GAEjCV,EAAKa,SAASd,EAAgBE,GAAS,EAAIA,EAAQ,EAAIF,EAAelB,OAAS,GAAK,UACpFmB,EAAKa,SAASd,EAAeE,GAA7B,UAA+CD,EAAKf,QACpDe,EAAKa,SAASd,EAAgBE,EAAQF,EAAelB,OAAS,EAAIoB,EAAQ,EAAI,GAAK,SAEnFD,EAAKY,YAAYN,EAAaI,GAC9BV,EAAKa,SAASP,EAAYL,GAAO,aAEjCA,GACaF,EAAelB,SAAUoB,EAAQ,IAG5Ca,EAAO,WACTZ,EAAWa,YAAY,WACnBP,KACW,IAAZR,EAAKV,OAEN0B,EAAW,WACbC,cAAcf,GAGdH,GAAelB,OAAS,IACxBiC,IACAX,EAAUe,iBAAiB,YAAY,WACnCF,MAEJb,EAAUe,iBAAiB,WAAW,WAClCJ,MAEJV,SAASG,iBAAiB,gCAAgCZ,QAAQ,SAACC,EAAKuB,GACpEvB,EAAKsB,iBAAiB,QAAS,WAC3BF,IACAR,EAASW,0CAKfC,GAKN,IAAK,GAJDC,GAAU,GACVC,EAAa,GACbC,GAAQ,EAEHC,EAAI,EAAGC,EAAML,EAAUvC,OAAQ2C,EAAIC,EAAKD,IAC7CH,GAAAA,wCAAmDE,EAAQ,SAAW,IAAtE,uCACsBH,EAAUI,GAAGE,KADnC,0CAEsBN,EAAUI,GAAGG,MAFnC,wCAIAL,GAAAA,yCAAuDE,EAAvD,KAA6DD,EAAQ,SAAW,IAAhF,iBAAoGC,EAApG,WAEAD,GAAQ,CAGZ,IAAIK,GAAAA,mFAC6CP,EAD7C,6CAGAQ,EAAAA,2BAA8CP,EAA9C,SACAQ,EAAU9C,KAAKK,IAAL,oLAGW,EAEzBe,UAASC,cAAcrB,KAAKI,UAAU2C,UAAYH,EAAgBC,EAAmBC,EACrF9C,KAAKgD,WAAW5B,SAASG,iBAAiB,8DAEvC,GAAA0B,GAAAjD,IACH,IAAIA,KAAKO,OAAOV,QAAU,EACtB,OAAO,CAEX,IAAMsB,GAAYC,SAASC,cAAcrB,KAAKI,SAC9Ce,GAAU+B,UAAUC,IAAI,iBAExB,IAAMC,GAAgB,WAClBH,EAAKI,UAAUJ,EAAK1C,QACpB0C,EAAKK,cAAcnC,GAEvBiC,KACAG,OAAOC,SAAW,WAAQJ","file":"Carousel.babel.js","sourcesContent":["/*\r\n\t\t@Autor  : Douglas JuliÃ£o\r\n\t\t@email  : douglas_juliao16@hotmail.com\r\n\t\t@github : https://github.com/dougjuliao\r\n*/\r\nclass Carousel {\r\n    constructor(config = {}) {\r\n        this.effect = config.effect || 'slideLeft';\r\n        this.width = config.width || '100%';\r\n        this.height = config.height || '250px';\r\n        this.selector = config.selector;\r\n        this.nav = config.nav || false;\r\n        this.time = config.time || 4;\r\n        this.slides = config.slides || [];\r\n        this.init();\r\n    }\r\n    addClass(selector, classe) {\r\n        selector.className += ' '+classe;\r\n    }\r\n    removeClass(selector, classe) {\r\n        selector.forEach(item => {\r\n            item.className = item.className.replace(classe, '');\r\n        });\r\n    }\r\n    setDimensions(selector) {\r\n        selector.style.width = this.width;\r\n        selector.style.height = this.height;\r\n    }\r\n    execEffect(selectorSlides) {\r\n        let count = 1;\r\n        let interval = null;\r\n        const container = document.querySelector(this.selector);\r\n        const circleItems = document.querySelectorAll('.ca-circles .ca-circles-item');\r\n\r\n        const setSlide = (loopCount) => { // SLIDE LOGIC AND CIRCLES NAV\r\n            if (loopCount !== undefined) {\r\n                count = loopCount;\r\n            }\r\n            const remove = new RegExp(` active| ${this.effect}| before| after`, 'g');\r\n            this.removeClass(selectorSlides, remove);\r\n\r\n            this.addClass(selectorSlides[(count >= 1 ? count - 1 : selectorSlides.length - 1)], 'before');\r\n            this.addClass(selectorSlides[count], `active ${this.effect}`);\r\n            this.addClass(selectorSlides[(count < selectorSlides.length - 1 ? count + 1 : 0)], 'after');\r\n\r\n            this.removeClass(circleItems, remove);\r\n            this.addClass(circleItems[count],' active');\r\n\r\n            count++;\r\n            if (count == selectorSlides.length) { count = 0; }\r\n        };\r\n\r\n        const loop = () => { //LOOP SLIDES\r\n            interval = setInterval(() => {\r\n                setSlide();\r\n            }, this.time * 1000);\r\n        };\r\n        const loopStop = () => { // CLEAR LOOP\r\n            clearInterval(interval);\r\n        };\r\n\r\n        if (selectorSlides.length > 1){ // IF MORE THAN 1 SLIDE\r\n            loop();\r\n            container.addEventListener('mouseover',() => {\r\n                loopStop();\r\n            });\r\n            container.addEventListener('mouseout',() => {\r\n                loop();\r\n            });\r\n            document.querySelectorAll('.ca-circles .ca-circles-item').forEach((item,idx) => {\r\n                item.addEventListener('click', () => {\r\n                    loopStop();\r\n                    setSlide(idx);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    drawSlide(arrSlides) { // ADD ELEMNTS TO HTML\r\n        let txtHTML = '';\r\n        let navCircles = '';\r\n        let first = true;\r\n\r\n        for (let i = 0, len = arrSlides.length; i < len; i++) {\r\n            txtHTML += `<div class=\"ca-slides-item animated ${(first ? 'active' : '')}\">\r\n                            <p>\"${arrSlides[i].desc}\"</p>\r\n                            <h2>${arrSlides[i].title}</h2>\r\n                        </div>`;\r\n            navCircles += `<div class=\"ca-circles-item ca-slides-${i} ${(first ? 'active' : '')}\" data-slide=\"${i}\"></div>`;\r\n\r\n            first = false;\r\n        };\r\n\r\n        let containerHTML = `<div class=\"container\">\r\n                                <div class=\"ca-slides\">${txtHTML}</div>\r\n                            </div>`;\r\n        let containerCircles = `<div class=\"ca-circles\">${navCircles}</div>`;\r\n        let navHTML = this.nav ? `<div class=\"ca-nav\">\r\n                            <a class=\"ca-prev\" href=\"#\"><</a>\r\n                            <a class=\"ca-next\" href=\"#\">></a>\r\n                       </div>` : '';\r\n\r\n        document.querySelector(this.selector).innerHTML = containerHTML + containerCircles + navHTML;\r\n        this.execEffect(document.querySelectorAll('.ca-slides .ca-slides-item')); // CALL SLIDE LOGIC AFTER HTML INSERT\r\n    }\r\n    init() {\r\n        if (this.slides.length <= 0){\r\n            return false;\r\n        }\r\n        const container = document.querySelector(this.selector);\r\n        container.classList.add('carousel-craze');\r\n\r\n        const callFunctions = () => {\r\n            this.drawSlide(this.slides);\r\n            this.setDimensions(container);\r\n        };\r\n        callFunctions();\r\n        window.onresize = () => { callFunctions() };\r\n    }\r\n}"]}